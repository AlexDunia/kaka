import{G as U,r as d,c as h}from"./index-Coq0l3Fl.js";const s=[];for(let e=0;e<256;++e)s.push((e+256).toString(16).slice(1));function I(e,t=0){return(s[e[t+0]]+s[e[t+1]]+s[e[t+2]]+s[e[t+3]]+"-"+s[e[t+4]]+s[e[t+5]]+"-"+s[e[t+6]]+s[e[t+7]]+"-"+s[e[t+8]]+s[e[t+9]]+"-"+s[e[t+10]]+s[e[t+11]]+s[e[t+12]]+s[e[t+13]]+s[e[t+14]]+s[e[t+15]]).toLowerCase()}let m;const f=new Uint8Array(16);function E(){if(!m){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");m=crypto.getRandomValues.bind(crypto)}return m(f)}const R=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),v={randomUUID:R};function p(e,t,n){var l;if(v.randomUUID&&!e)return v.randomUUID();e=e||{};const r=e.random??((l=e.rng)==null?void 0:l.call(e))??E();if(r.length<16)throw new Error("Random bytes length must be >= 16");return r[6]=r[6]&15|64,r[8]=r[8]&63|128,I(r)}const x=[{id:"1",email:"user@example.com",password:"password123",name:"Regular User",role:"user",created_at:"2024-01-01T00:00:00.000Z"},{id:"2",email:"admin@example.com",password:"admin123",name:"Admin User",role:"admin",created_at:"2024-01-01T00:00:00.000Z"}],w="auth_token",y="user",O=()=>{localStorage.getItem("users")||localStorage.setItem("users",JSON.stringify(x))},S=()=>(O(),JSON.parse(localStorage.getItem("users")||"[]")),_=async e=>{const t=S();if(t.find(l=>l.email===e.email))throw new Error("Email already registered");const n={id:p(),email:e.email,password:e.password,name:e.name,role:"user",created_at:new Date().toISOString()};t.push(n),localStorage.setItem("users",JSON.stringify(t));const r={...n};return delete r.password,r},b=async(e,t)=>{const r=S().find(i=>i.email===e&&i.password===t);if(!r)throw new Error("Invalid login credentials");const l=p(),c={...r};return delete c.password,localStorage.setItem(w,l),localStorage.setItem(y,JSON.stringify(c)),{user:c,token:l}},k=()=>(localStorage.removeItem(w),localStorage.removeItem(y),!0),A=()=>!!localStorage.getItem(w),J=()=>{const e=localStorage.getItem(y);return e?JSON.parse(e):null},N=async e=>{if(!S().find(r=>r.email===e))throw new Error("Email not found");return{success:!0,message:"Reset link sent to your email"}},g={register:_,login:b,logout:k,isAuthenticated:A,getCurrentUser:J,forgotPassword:N},K=U("auth",()=>{const e=d(null),t=d(null),n=d(!1),r=d(null);(()=>{try{const o=localStorage.getItem("user"),a=localStorage.getItem("auth_token");o&&a&&(e.value=JSON.parse(o),t.value=a)}catch(o){console.error("Error initializing auth store:",o)}})();const c=h(()=>!!t.value),i=h(()=>{var o;return((o=e.value)==null?void 0:o.role)==="admin"});return{user:e,token:t,loading:n,error:r,isAuthenticated:c,isAdmin:i,login:async(o,a)=>{n.value=!0,r.value=null;try{const u=await g.login(o,a);return e.value=u.user,t.value=u.token,u}catch(u){throw r.value=u.message||"Login failed",u}finally{n.value=!1}},register:async o=>{n.value=!0,r.value=null;try{return await g.register(o)}catch(a){throw r.value=a.message||"Registration failed",a}finally{n.value=!1}},logout:()=>{try{g.logout(),e.value=null,t.value=null}catch(o){console.error("Error during logout:",o)}},forgotPassword:async o=>{n.value=!0,r.value=null;try{return await g.forgotPassword(o)}catch(a){throw r.value=a.message||"Password reset request failed",a}finally{n.value=!1}}}});export{K as u,p as v};
