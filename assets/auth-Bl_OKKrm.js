import{M as r,L as i}from"./index-DyY8Ujzr.js";const o=t=>{t?(r.defaults.headers.common.Authorization=`Bearer ${t}`,localStorage.setItem("auth_token",t)):(delete r.defaults.headers.common.Authorization,localStorage.removeItem("auth_token"))},n=i("auth",{state:()=>({user:null,token:null,loading:!1,error:null}),getters:{isAuthenticated:t=>!!t.token,getUser:t=>t.user,getError:t=>t.error,isLoading:t=>t.loading},actions:{async initialize(){try{const t=localStorage.getItem("auth_token");t&&(this.token=t,await this.fetchUser())}catch(t){throw this.error=t.message||"Failed to initialize auth store",t}},async login(t){this.loading=!0,this.error=null;try{const e=await r.post("/api/login",t),{token:s,user:a}=e.data;return this.token=s,this.user=a,localStorage.setItem("auth_token",s),o(s),a}catch(e){throw this.error=e.message||"Login failed",e}finally{this.loading=!1}},async logout(){this.loading=!0,this.error=null;try{await r.post("/api/logout")}catch(t){this.error=t.message||"Logout failed"}finally{this.token=null,this.user=null,localStorage.removeItem("auth_token"),o(null),this.loading=!1}},async fetchUser(){if(!this.token)return null;this.loading=!0,this.error=null;try{const t=await r.get("/api/user");return this.user=t.data,this.user}catch(t){throw this.error=t.message||"Failed to fetch user data",t}finally{this.loading=!1}},async updateUser(t){if(!this.token)throw new Error("Not authenticated");this.loading=!0,this.error=null;try{const e=await r.put("/api/user",t);return this.user=e.data,this.user}catch(e){throw this.error=e.message||"Failed to update user data",e}finally{this.loading=!1}},async register(t){this.loading=!0,this.error=null;try{const e=await r.post("/api/register",t),{token:s,user:a}=e.data;return this.token=s,this.user=a,localStorage.setItem("auth_token",s),o(s),a}catch(e){throw this.error=e.message||"Registration failed",e}finally{this.loading=!1}},async resetPassword(t){this.loading=!0,this.error=null;try{await r.post("/api/reset-password",{email:t})}catch(e){throw this.error=e.message||"Failed to send password reset email",e}finally{this.loading=!1}},async updatePassword(t){this.loading=!0,this.error=null;try{await r.post("/api/update-password",t)}catch(e){throw this.error=e.message||"Failed to update password",e}finally{this.loading=!1}}}});export{n as u};
